# SPDX-License-Identifier: Apache-2.0
# Licensed to the Ed-Fi Alliance under one or more agreements.
# The Ed-Fi Alliance licenses this file to you under the Apache License, Version 2.0.
# See the LICENSE and NOTICES files in the project root for more information.

name: On Merge to Main
on:
  push:
    branches:
      - main

env:
  API_URL: https://api.github.com/repos/${{ github.repository }}
  TOKEN: ${{ secrets.EDFI_BUILD_AGENT_PAT }}

jobs:
  create-pre-releases:
    name: Create Pre-Releases
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the Repo
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # v3.0.2
        with:
          # MinVer needs to have more than just the current commit, so tell
          # GitHub to get many more. Does not need _all_ though, so hoping
          # that 200 will be enough.
          fetch-depth: 200

      - name: Set Version Numbers
        id: versions
        shell: pwsh
        run: |
          # Install the MinVer CLI tool
          &dotnet tool install --global minver-cli

          Push-Location Application/EdFi.Ods.AdminApp.Web
          "::set-output name=admin-app::$(minver -t AdminApp.Web-v)" | Write-Output
          Pop-Location

          Push-Location Application/EdFi.Ods.Admin.Api
          "::set-output name=admin-api::$(minver -t Admin.Api-v)" | Write-Output

      - name: Create Admin App Web Pre-Release
        env:
          VERSION: AdminApp.Web-v${{ steps.versions.outputs.admin-app }}
        shell: pwsh
        run: |
          $body = @{
            tag_name = "${{ env.VERSION }}"
            target_commitish = "main"
            name = "${{ env.VERSION }}"
            body = ""
            draft = $false
            prerelease = $true
            generate_release_notes = $false
          } | ConvertTo-Json

          $headers = @{
            Accept = "application/vnd.github+json"
            Authorization = "Bearer ${{ env.TOKEN }}"
          }

          Invoke-RestMethod -Method POST -Uri ${{ env.API_URL }}/releases -Body $body -Headers $headers

      - name: Create Admin API Pre-Release
        env:
          VERSION: Admin.Api-v${{ steps.versions.outputs.admin-api }}
        shell: pwsh
        run: |
          $body = @{
            tag_name = "${{ env.VERSION }}"
            target_commitish = "main"
            name = "${{ env.VERSION }}"
            body = ""
            draft = $false
            prerelease = $true
            generate_release_notes = $false
          } | ConvertTo-Json

          $headers = @{
            Accept = "application/vnd.github+json"
            Authorization = "Bearer ${{ env.TOKEN }}"
          }

          Invoke-RestMethod -Method POST -Uri ${{ env.API_URL }}/releases -Body $body -Headers $headers


